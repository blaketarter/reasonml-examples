// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");

function make(x) {
  return /* Queue */[
          x,
          /* [] */0
        ];
}

function enqueue(x, y) {
  if (x) {
    var b = x[1];
    var a = x[0];
    if (b) {
      return /* Queue */[
              a,
              List.append(b, /* :: */[
                    y,
                    /* [] */0
                  ])
            ];
    } else {
      return /* Queue */[
              a,
              /* :: */[
                y,
                /* [] */0
              ]
            ];
    }
  } else {
    return /* Queue */[
            y,
            /* [] */0
          ];
  }
}

function dequeue(x) {
  if (x) {
    var match = x[1];
    var a = x[0];
    if (match) {
      return /* tuple */[
              /* Some */[a],
              /* Queue */[
                match[0],
                match[1]
              ]
            ];
    } else {
      return /* tuple */[
              /* Some */[a],
              /* Empty */0
            ];
    }
  } else {
    return /* tuple */[
            /* None */0,
            /* Empty */0
          ];
  }
}

function getFront(x) {
  if (x) {
    return /* Some */[x[0]];
  } else {
    return /* None */0;
  }
}

function length(x) {
  if (x) {
    var b = x[1];
    if (b) {
      return 1 + List.length(b) | 0;
    } else {
      return 1;
    }
  } else {
    return 0;
  }
}

exports.make     = make;
exports.enqueue  = enqueue;
exports.dequeue  = dequeue;
exports.getFront = getFront;
exports.length   = length;
/* No side effect */
