// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List       = require("bs-platform/lib/js/list.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function countTo(_c, _$staropt$star, s) {
  while(true) {
    var $staropt$star = _$staropt$star;
    var c = _c;
    var l = $staropt$star ? $staropt$star[0] : /* [] */0;
    if (c) {
      var x = c[0];
      if (x !== 0) {
        _$staropt$star = /* Some */[/* :: */[
            x,
            l
          ]];
        _c = /* Some */[x - 1 | 0];
        continue ;
        
      } else {
        return l;
      }
    } else {
      _$staropt$star = /* Some */[/* [] */0];
      _c = /* Some */[s];
      continue ;
      
    }
  };
}

function isFizz(x) {
  var match = +(x % 3 === 0);
  if (match !== 0) {
    return /* Fizz */0;
  } else {
    return /* None */1;
  }
}

function isBuzz(x) {
  var match = +(x % 5 === 0);
  if (match !== 0) {
    return /* Buzz */0;
  } else {
    return /* None */1;
  }
}

function fizzBuzz(x) {
  var res_000 = isFizz(x);
  var res_001 = isBuzz(x);
  if (res_000 !== 0) {
    if (res_001 !== 0) {
      return Pervasives.string_of_int(x);
    } else {
      return "Buzz";
    }
  } else if (res_001 !== 0) {
    return "Fizz";
  } else {
    return "FizzBuzz";
  }
}

function fizzBuzzOverList(param) {
  return List.map(fizzBuzz, param);
}

function logOverList(param) {
  return List.iter((function (prim) {
                console.log(prim);
                return /* () */0;
              }), param);
}

logOverList(fizzBuzzOverList(countTo(/* None */0, /* None */0, 100)));

exports.countTo          = countTo;
exports.isFizz           = isFizz;
exports.isBuzz           = isBuzz;
exports.fizzBuzz         = fizzBuzz;
exports.fizzBuzzOverList = fizzBuzzOverList;
exports.logOverList      = logOverList;
/*  Not a pure module */
